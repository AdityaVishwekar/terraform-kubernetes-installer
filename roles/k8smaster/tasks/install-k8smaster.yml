- name: Check if Flannel rpm is downloaded
  stat:
    path: "{{ package_download_dir }}/{{ flannel_rpm }}"
    get_md5: False
    get_checksum: False
  register: flannel_downloaded

- name: Download Flannel rpm
  get_url:
    url: 'https://objectstorage.us-phoenix-1.oraclecloud.com/n/bmcskeppare/b/{{ casper_public_bucket }}/o/{{ flannel_rpm }}'
    dest: "{{ package_download_dir }}"
  when: not flannel_downloaded.stat.exists

- name: Add kubernetes repo
  yum_repository:
    name: yum.kubernetes.io_repos_kubernetes-el7-x86_64
    description: Kubernetes repo
    baseurl: http://yum.kubernetes.io/repos/kubernetes-el7-x86_64

- name: Import google cloud YUM key
  rpm_key:
    state: present
    key: https://packages.cloud.google.com/yum/doc/yum-key.gpg

- name: Import google cloud RPM key
  rpm_key:
    state: present
    key: https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: Install packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ package_download_dir }}/{{ flannel_rpm }}"
    - containernetworking-cni
    - kubelet
    - kubectl
    - kubernetes-cni

- name: Install flannel json config file
  template:
    src: templates/flannel-network.json
    dest: /tmp/flannel-network.json
    owner: root
    group: root
    mode: 0644

- name: Install etcd flannel config key
  command: "curl -sf -L http://{{ ansible_default_ipv4.address }}:2379/v2/keys/flannel/network/config -X PUT --data-urlencode value@/tmp/flannel-network.json"
  tags:
  - skip_ansible_lint

- name: Set flannel options
  lineinfile:
    path: /etc/sysconfig/flanneld
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^FLANNEL_OPTIONS=', line: "FLANNEL_OPTIONS='-iface={{ ansible_default_ipv4.address }}'"}
    - { regexp: '^FLANNEL_ETCD_ENDPOINTS=', line: 'FLANNEL_ETCD_ENDPOINTS=http://{{ ansible_default_ipv4.address }}:2379'}
    - { regexp: '^FLANNEL_ETCD_PREFIX=', line: 'FLANNEL_ETCD_PREFIX=/flannel/network'}

- name: Start flannel Service
  service:
     name: flanneld
     state: started
     enabled: yes

- name: Create CNI Config Dir
  file:
    path: /etc/cni/net.d
    owner: root
    group: root
    mode: 0755
    state: directory

- name: Install CNI Flannel config file
  template:
    src: templates/10-flannel.conf
    dest: /etc/cni/net.d/10-flannel.conf
    owner: root
    group: root
    mode: 0644

- name: Install CNI-Bridge service
  template:
    src: templates/cni-bridge.service
    dest: /etc/systemd/system/cni-bridge.service
    owner: root
    group: root
    mode: 0644

- name: Install CNI Bridge Startup Script
  template:
    src: templates/cni-bridge.sh
    dest: /usr/local/bin/cni-bridge.sh
    owner: root
    group: root
    mode: 0755


- name: Start CNI Bridge Service
  service:
    daemon-reload: yes
    name: cni-bridge
    state: started
    enabled: yes

- name: Remove unnecessary flannel config
  command: "{{ item }}"
  with_items:
      - rm -rf /usr/lib/systemd/system/docker.service.d
      - rm -f /run/flannel/docker
      - rm -rf /etc/systemd/system/docker.service.d
  tags:
  - skip_ansible_lint

- name: Install docker unit file
  template:
    src: templates/docker.service
    dest: /usr/lib/systemd/system/docker.service
    owner: root
    group: root
    mode: 0644
  register: docker_svc_updated

# TODO - don't
- name: Start Docker Service
  service:
     daemon-reload: yes
     name: docker
     state: restarted
     enabled: yes

  when: docker_svc_updated



- name: Install k8s apiserver yaml file
  template:
    src: templates/kube-apiserver.yaml
    dest: /etc/kubernetes/manifests/kube-apiserver.yaml
    owner: root
    group: root
    mode: 0755

- name: Install k8s controller yaml file
  template:
    src: templates/kube-controller-manager.yaml
    dest: /etc/kubernetes/manifests/kube-controller-manager.yaml
    owner: root
    group: root
    mode: 0755

- name: Install k8s proxy yaml file
  template:
    src: templates/kube-proxy.yaml
    dest: /etc/kubernetes/manifests/kube-proxy.yaml
    owner: root
    group: root
    mode: 0755

- name: Install k8s scheduler yaml file
  template:
    src: templates/kube-scheduler.yaml
    dest: /etc/kubernetes/manifests/kube-scheduler.yaml
    owner: root
    group: root
    mode: 0755

- name: Create service yaml dirs
  file:
    state: directory
    path: /home/opc/services
    owner: opc
    group: opc
    mode: 0755

- name: Prepare k8s dns yaml file
  template:
    src: templates/kube-dns.yaml
    dest: /home/opc/services/kube-dns.yaml
    owner: opc
    group: opc
    mode: 0755

- name: Prepare k8s dashboard yaml file
  template:
    src: templates/kubernetes-dashboard.yaml
    dest: /home/opc/services/kubernetes-dashboard.yaml
    owner: opc
    group: opc
    mode: 0755

# TODO - don't use checked-in certs
- name: Create ssl dirs
  file:
    state: directory
    path: /etc/kubernetes/ssl
    owner: root
    group: root
    mode: 0755

- name: Extract certs
  unarchive:
    src: files/k8s-certs.zip
    dest: /etc/kubernetes/ssl
    remote_src: false

- name: Environment config commands before starting kubelet
  command: "{{ item }}"
  with_items:
    - iptables -F
    - setenforce 0
  tags:
  - skip_ansible_lint

- name: Install kubelet unit file
  template:
    src: templates/kubelet.service
    dest: /etc/systemd/system/kubelet.service
    owner: root
    group: root
    mode: 0644
  register: kubelet_svc_updated

- name: Restart Kubelet Service
  service:
     daemon-reload: yes
     name: kubelet
     state: restarted
     enabled: yes
  when: kubelet_svc_updated

- name: Ensure K8s API server comes up
  health_check:
     url: http://localhost:8080/healthz
     expected_status: 200
     initial_delay: 10
     delay_between_tries: 5
     max_retries: 20

- name: Install kubernetes DNS
  command: "kubectl create -f /home/opc/services/kube-dns.yaml"
  ignore_errors: yes # this will get launched from each master, but only needs to succeed on one
  tags:
  - skip_ansible_lint

- name: Install kubernetes dashboard
  command: "kubectl create -f /home/opc/services/kubernetes-dashboard.yaml"
  ignore_errors: yes # this will get launched from each master, but only needs to succeed on one
  tags:
  - skip_ansible_lint

